<style type="text/css"><!--
      .partition rect {
        cursor: pointer;
        fill: steelblue;
        stroke: #fff; }

      .partition text {
        pointer-events: none; }

      .partition.leaf rect {
        stroke: #eee;
        fill: #aaa; }
rect {
  stroke: #eee;
  fill: #aaa;
  fill-opacity: .8;
}
.background {
	fill: none;
}

.axes-layer path, .axes-layer line {
  fill: none;
  stroke: #fff;
  shape-rendering: crispEdges;
}

rect.parent {
  cursor: pointer;
  fill: steelblue;
}

--></style>
[%	WRAPPER scripts/pageload_wrapper.tt;
	scr_arr =  [
		'/js/d3.min.js',
		'/js/d3-tip.js',
		'/js/d3.chart.min.js',
		'/js/element-resize-detector.min.js',
		'/js/d3.chart.base-ext.js',
		'/js/d3.chart.layout.hierarchy-ext.js',
	];
%]
// 		d3.chart("tippedPartition",{
// 			initialise: function(){
// 				var chart = this
// 				, svg = chart.base.append('svg')
// 				, bases = {
// 					partG: svg.append('g').classed("partition",true),
// 					tipG: d3.select('body')
// 				};
//
// 				chart.charts = {
// 					partition : bases.partG
// 						.chart("partition.rectangle")
// 						.value('_COUNT_')
// 						.collapsible()
// 						.sortable("_ASC_")
// 					,
// 					tooltips: bases.tipG
// 						.chart("TooltipMixinChart")
// 						.options({
// 							layer: bases.partitionG,
// 							type : "rect"
// 						})
// 				};
//
// 				chart.attach('partition', chart.charts.partition);
// 				chart.attach('tooltips', chart.charts.tooltips);
//
// 				return chart;
// 			}
// 		});
//
// 		// create an instance of the chart on a d3 selection
// 		var chart = d3.select("#partition")
// 			.append("svg")
// 			.attr("height", 60)
// 			.attr("width", 600)
// 			.chart("tippedPartition");
//
// 		chart.attach('tooltips').text(function(d) {
// 			return "<b style='background-color:white; padding:5px; border: 1px solid #eee;'>" + d + "</b>";
// 		});
//
// 		chart.draw( tree_struct );

		var json=getJson()
		, tip = d3.tip()
			.attr('class', 'd3-tip')
	//		.rootElement( document.getElementById('partition') )
			.direction(function(d) {
				if ( d.children ) {
					return 'e';
				}
				return 'w';
			})
			.offset([0, 0])
			.html(function(d) {
				if ( d.data && d.data.taxon_display_name) {
					return d.data.taxon_display_name;
				}
				if( d.depth > 0 ) {
					return json.results.class_types[ d.depth-1 ] + ': ' + d.name + ', ' + ( d.value || d.values.length ) + ' samples';
				}
			})

		, container = d3.select("#partition")
			.append("svg")
			.call(tip)

		, vis = container.chart("partition.rectangle")
//			.cfg({ height: 800 })
			.value('_COUNT_')
			// .zoomable([1, 5])
			.collapsible()
//			.resizable()
			.with_tips( tip )
			// .duration(200)
			.sortable("_ASC_");

// 		d3.chart('BaseChart').extend('ResizablePartition',{
// 		});

		d3.selectAll('.js_vis_loading')
			.remove();
		d3.selectAll('.js_sample_details')
			.classed('js_hide',true);

		vis.draw( json.results.tree );
//		make_chart_two(json.tree,json.class_types);

[%	END %]
