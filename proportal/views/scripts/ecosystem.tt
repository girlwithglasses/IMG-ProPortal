[%	WRAPPER scripts/pageload_wrapper.tt;
	scr_arr =  [
		'/js/d3.min.js',
		'/js/d3.chart.min.js',
		'/js/d3.chart.tooltip.js',
		'/js/d3.chart.layout.hierarchy-ext.js',
	];
%]

d3.chart("TippedVisualisation", {

	sortable: function( args ){
		return this.attach('vis').sortable( args );
	},

	collapsible: function( args ){
		return this.attach('vis').collapsible( args );
	},

	colors: function( args ){
		return this.attach('vis').colors( args );
	},

	name: function( args ){
		return this.attach('vis').name( args );
	},

	value: function( args ){
		return this.attach('vis').value( args );
	},

	duration: function( args ){
		return this.attach('vis').duration( args );
	},

	zoomable: function( args ){
		return this.attach('vis').zoomable( args );
	},

	tooltip: function( args ){

		var func = function(d) {
			return d[ args ] || 'no data for ' + args;
		};
		this.attach('tips').text( func );
	},

	resize: function() {
		this.trigger('change:size');
		if ( this.data ) {
			this.draw( this.data );
		}
	},

	initialize: function( options ) {

	  // attach the charts under a specific name to the parent chart
		this.attach("vis",
			this.base
				.chart( options.chart_type , options.chart )
			);

		var tips_options = {
			layer : this.attach('vis'),
			type : options.tooltip.selector,
			text : options.tooltip.text || function(d) {
				return d.name;
			}
		};

		this.attach('tips',
			d3.select('body')
				.chart('TooltipMixinChart', tips_options )
			);
	}
});


		var json = getJson()
		, class_type_h = json.results.class_type_h
		, container = d3.select("#partition")
			.style('height', '500px')
			.append("svg")

		, text_fn = function(d,i,tip) {
			if ( d.data && d.data.taxon_display_name) {
				return d.data.taxon_display_name;
			}
			if( d.depth ) {
				return class_type_h[ d.depth ] + ': ' + d.name + ', ' + ( d.value || d.values.length ) + ' samples';
			}
			return 'all ecosystem classifications';
		}

		, vis = container.chart("TippedVisualisation", {
				chart_type: 'partition.rectangle'
				, tooltip: {
					selector: '.partition'
					, text: text_fn
				}
			});

		vis.value( '_COUNT_' )
		.sortable( '_ASC_' )
		.collapsible();

		d3.selectAll('.js_vis_loading')
			.remove();

		vis.draw( json.results.tree );

//		make_chart_two(json.tree,json.class_types);

[%	END %]
