[%
#	reset and submit controls for a form
#
#	params (hashref)
#
#	args.class -- class for the form elements
#	args.selectall_id  -- id to give the select all element for attaching JS listeners
#	if omitted, the select all button will not be added

	MACRO buttons ( args ) BLOCK;

%]
<fieldset class="[% args.class %]__fieldset">
<input class="[% args.class %]__reset" type="reset" value="Clear selection" />
<input class="[% args.class %]__submit" type="submit" value="Add to cart" />
</fieldset>
[%
	END;

	MACRO form_as_button ( form_button ) BLOCK;

#	A form element without extra controls to wrap content to be added to a cart
#	content would typically be an 'Add to cart' button plus the relevant input parameter
#
#	params (hashref)
#
#	form_button.action    -- URL for the form action
#	form_button.class     -- css class
#	form_button.id        -- ID for the form (optional)
#	form_button.name      -- name for the form (optional)
#	form_button.params    -- hashref of hidden parameters to include in the form
#
#	see also the specific forms generated by the function_add, gene_add,
#	scaffold_add, taxon_add templates

# %]
<form action="[% form_button.action %]" [%
	IF form_button.name %]name="[% form_button.name %]" [% END;
	IF form_button.id %]id="[% form_button.id %]" [% END;
	%]method="POST" class="[% form_button.class %]__form">
<fieldset class="[% form_button.class %]__main-fieldset">
[%	FOR h IN form_button.params.keys %]
<input type="hidden" name="[% h %]" value="[% form_button.params.$h %]" />
[%	END; %]
<input type="submit" class="[% form_button.class %]__submit" value="Add to cart" />
</fieldset>
</form>
[%
	END;


#	A macro for generating form elements to wrap any content to be added to a cart
#
#	params:
#	form.domain    -- gene / function / scaffold / taxon
#	form.type      -- the template for generating the form (optional)
#	                  default: inc/cart/generic_add.tt
#	form.class     -- class for the form (optional)
#	                  default: <domain>-cart
#	form.params    -- parameters for the form (optional)
#	                  adds 'page' and 'section' params if not present

#	variables passed to $form_type template:
#
#	form.action    -- URL for the form action
#	form.class     -- css class
#	form.params  -- hashref of hidden parameters to include in the form

#	other params passed straight through to form:
#
#	form.id        -- ID for the form (optional)
#	form.name      -- name for the form (optional)
#
#	see also the specific forms generated by the function_add, gene_add,
#	scaffold_add, taxon_add templates

	cart_name = {
		taxon => 'genome',
		gene  => 'gene',
		scaffold => 'scaffold',
		function => 'function'
	};

	MACRO cart_add ( form ) BLOCK;

		h_params = {
			page =>    cart_name.${form.domain} _ 'Cart'
		};
		h_params.section => h_params.page | ucfirst;

		# domain = gene / function / taxon / scaffold

		form.action = img_app_config.main_cgi_url;

		IF ! form.class;
			form.class = form.domain _ '-cart';
		END;

		IF ! form.type;
			form_type = 'generic_add';
		ELSE;
			form_type = form.type;
		END;

		# make sure we have all the hidden params for the cart
		IF ! form.params;
			form.params = h_params;
		ELSE;
			FOR hp IN h_params.keys;
				IF ! form.params.defined( hp );
					form.params.$hp = h_params.$hp;
				END;
			END;
		END;

		$form_type ( form );

	END;




	MACRO generic_form ( gen_form ) BLOCK;

#	A generic form element to wrap any content to be added to a cart
#	includes controls at the top and bottom
#
#	params:
#	gen_form.action    -- URL for the form action
#	gen_form.class     -- css class
#	gen_form.id        -- ID for the form (optional)
#	gen_form.name      -- name for the form (optional)
#	gen_form.params  -- hashref of hidden parameters to include in the form
#
#	see also the specific forms generated by the
#	function_add, gene_add, scaffold_add, taxon_add templates
# %]
<form action="[% gen_form.action %]" [%

	IF gen_form.name %]name="[% gen_form.name %]" [% END;

	IF gen_form.id %]id="[% gen_form.id %]" [% END;

	%]method="POST" class="[% gen_form.class %]__form">
<fieldset class="[% gen_form.class %]__main-fieldset">
[%
	FOR h IN gen_form.params.keys %]
<input type="hidden" name="[% h %]" value="[% gen_form.params.$h %]" />
[%
	END;

	control_class = gen_form.class _ '--top';
	buttons( { class => control_class } );

	content;

	control_class = gen_form.class _ '--base';
	buttons( { class => control_class } ); %]
</fieldset>
</form>
[%	END %]
